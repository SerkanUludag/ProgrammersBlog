@model ProgrammersBlog.Entity.DTOs.ArticleListDto
@using System.Text.RegularExpressions;
@using ProgrammersBlog.Web.Extensions
@{
    ViewBag.Title = "Home";
    Layout = "_Layout";
    Regex regex = new Regex("<[^>]*>");         // to clear HTML from article.Content
}
<div class="col-md-8">

    <h1 class="my-4">
        Last Posted Articles
    </h1>
    <form>
        <div class="form-row">
            <input type="hidden" id="category-id" value="@(Model.CategoryId != null ? Model.CategoryId.Value : null)"/>
            <input type="hidden" id="current-page" value="@Model.CurrentPage"/>
            <div class="form-group col-md-6">
                <select class="form-control" id="select-page-size">
                    <option value="5" selected="@(Model.PageSize == 5 ? "selected" : null))">5</option>
                    <option value="10" selected="@(Model.PageSize == 10 ? "selected" : null)">10</option>
                    <option value="20" selected="@(Model.PageSize == 20 ? "selected" : null)">20</option>
                </select>
            </div>
            <div class="form-group col-md-6">
                <select class="form-control" id="select-is-ascending">
                    <option value="false" selected="@(Model.IsAscending == false ? "selected" : null))">Newest</option>
                    <option value="true" selected="@(Model.IsAscending ? "selected" : null)">Oldest</option>
                </select>
            </div>
        </div>
    </form>

    @foreach (var article in Model.Articles)
    {
        <!-- Blog Post -->
        <div class="card mb-4">
            <img class="card-img-top" src="~/img/@article.Thumbnail" alt="@article.Title">
            <div class="card-body">
                <h2 class="card-title">@article.Title</h2>
                <p class="card-text">
                    @{
                        article.Content = regex.Replace(article.Content, "");
                    }
                    @(article.Content.Length > 250 ? article.Content.Substring(0, 250) : article.Content)
                </p>
                <a href="/@Url.FriendlyUrlHelper(article.Title)/@article.Id" class="btn btn-primary">Read More &rarr;</a>   @*custom extension for @Url*@
            </div>
            <div class="card-footer text-muted">
                Posted on @article.Date by @article.User.UserName
            </div>
        </div>
    }

    <!-- Pagination -->
    <ul class="pagination justify-content-center mb-4">
        @{
            if (Model.ShowPrevious)
            {
                <li class="page-item">
                    @if (Model.CategoryId != null)
                    {
                        <a class="page-link" asp-route-currentPage="@(Model.CurrentPage-1)" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize" asp-route-categoryId="@Model.CategoryId.Value">Previous</a>
                    }
                    else
                    {
                        <a class="page-link" asp-route-currentPage="@(Model.CurrentPage-1)" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize">Previous</a>
                    }
                </li>
            }
            for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    @if (Model.CategoryId != null)
                    {
                        <a class="page-link" asp-route-currentPage="@i" asp-route-categoryId="@Model.CategoryId.Value" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize">@i</a>
                    }
                    else
                    {
                        <a class="page-link" asp-route-currentPage="@i" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize">@i</a>
                    }
                </li>
            }
            if (Model.ShowNext)
            {
                <li class="page-item">
                    @if (Model.CategoryId != null)
                    {
                        <a class="page-link" asp-route-currentPage="@(Model.CurrentPage+1)" asp-route-categoryId="@Model.CategoryId.Value" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize">Next</a>
                    }
                    else
                    {
                        <a class="page-link" asp-route-currentPage="@(Model.CurrentPage+1)" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize">Next</a>
                    }
                </li>
            }
        }
    </ul>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            $(function () {
                const selectPageSize = $('#select-page-size');
                const selectIsAscending = $('#select-is-ascending');
                const categoryId = $('#category-id').val();
                const currentPage = $('#current-page').val();
                const categoryQuery = categoryId !== null ? `&categoryId=${categoryId}` : null;

                selectPageSize.on('change', function () {
                    window.location = `/?pageSize=${selectPageSize.val()}&isAscending=${selectIsAscending.val()}${categoryQuery !== null ? categoryQuery : null}&currentPage=${currentPage}`
                });
                selectIsAscending.on('change', function () {
                    window.location = `/?pageSize=${selectPageSize.val()}&isAscending=${selectIsAscending.val()}${categoryQuery !== null ? categoryQuery : null}&currentPage=${currentPage}`
                });
            });

        });
    </script>
}